#MAKE Books FROM VOLUMES

#make Chapters from Books

# split volume into books based on the 1st word inserted designator: 
awk '/designator/{line="book"++i;}{print > line;}' volumefile 

# rename a bookfile with the name of the first line: 
awk 'FNR==1 {file=$0} {print > (file".txt")}' bookfiles*

# delete the designator from all .txt files:
sed -i 's/designator//' *.txt

#Repeat the process for chapters from books.

===========================================

1. Split Volume into Books


Copy Code
awk '/designator/{line="book"++i;}{print > line;}' volumefile
awk: This command processes the input file line by line.
/designator/: This is a pattern that matches lines containing the word "designator". When such a line is found, the following action is executed.
line="book"++i;: This creates a variable line that is assigned a name based on the current value of i, which is incremented each time a line with "designator" is found. The first book will be named book1, the second book2, and so on.
{print > line;}: This prints the current line to the file named in line. If the file does not exist, it will be created. If it does exist, the content will be appended to it.
volumefile: This is the input file that contains the text to be processed.


2. Rename Book Files with the Name of the First Line


Copy Code
awk 'FNR==1 {file=$0} {print > (file".txt")}' bookfiles*
FNR==1: This condition checks if the current record number (line number) is 1, meaning it is the first line of the current file being processed.
{file=$0}: When the first line is encountered, it assigns the entire line (the name of the book) to the variable file.
{print > (file".txt")}: This prints the current line to a file named after the first line, with a .txt extension. This means all lines from the book file will be written to a file named after the first line of that book.
bookfiles*: This indicates that the command will process all files that match the pattern bookfiles*.


3. Delete the Designator from All .txt Files


Copy Code
sed -i 's/designator//' *.txt
sed: This is a stream editor used for parsing and transforming text.
-i: This option tells sed to edit files in place, meaning the changes will be applied directly to the files without creating a backup.
's/designator//': This is a substitution command that searches for the word "designator" and replaces it with nothing (effectively deleting it).
*.txt: This indicates that the command will apply to all .txt files in the current directory.


4. Repeat the Process for Chapters from Books
The comment #Repeat the process for chapters from books. suggests that a similar process should be followed to split the newly created book files into chapters. This would likely involve using a similar awk command to identify chapter designators within the book files and then creating separate chapter files accordingly.


Summary
In summary, this script processes a volume file to create multiple book files based on the occurrence of a "designator." It then renames these book files based on their first line and removes the "designator" from the text. The final comment indicates that a similar process should be applied to create chapters from the newly created book files.
